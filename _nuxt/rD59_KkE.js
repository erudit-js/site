import{f as m,ag as _,O as f,Q as n,A as h,ab as x,v as y,o as g,w as b,a as k,R as w,k as e,n as C,J as E,K as M,_ as B}from"./CiBNX5Fz.js";import"./jTRQ5ZsA.js";import{u as D}from"./jT1gPe9_.js";import{u as P}from"./CV_MqC8s.js";import{m as S,F as V}from"./DIaMRG7c.js";import"./BPgHF7zz.js";import"./C8Tpl-oc.js";import"./TO1_kQR6.js";const W=["src"],I=m({__name:"VideoElement",props:{node:{}},setup(A){const l=_(),c=E(),t=D(),d=P(),i=f("video"),a=n(null),r=n(!1),o=n(!1);return t.autoplay.value||(r.value=!0,o.value=!0),h(()=>{if(!i.value)return;const s=i.value,u={rootMargin:"0px 0px 75px 0px",threshold:0};a.value=new IntersectionObserver(p=>{const v=p[0];try{v.isIntersecting?(r.value=!0,o.value||s.play()):(r.value?o.value=s.paused:o.value=!1,s.pause())}catch{}},u),a.value.observe(s)}),x(()=>{a.value&&a.value.disconnect()}),(s,u)=>(g(),y(V,{caption:e(t).caption},{default:b(()=>[k("video",{ref:"video",src:e(c)(e(M)(e(d).resolvedSrc)),preload:"metadata",loop:"",muted:"",controls:"",class:C({[e(l).video]:!0,[e(l)[`invert-${e(t).invert}`]]:!!e(t).invert}),style:w({maxWidth:e(S)(e(t).maxWidth)})},null,14,W)]),_:1},8,["caption"]))}}),R="_video_1e73l_1",U={video:R,"invert-light":"_invert-light_1e73l_4","invert-dark":"_invert-dark_1e73l_10"},z={$style:U},j=B(I,[["__cssModules",z]]);export{j as default};
