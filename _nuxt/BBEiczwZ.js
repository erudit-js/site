import{f as p,m as c,c as B,o,n as f,l as _,q as C,g as n,ax as d,E as u,w as x,ay as b,az as v,aA as $,_ as S}from"./CAkvs08M.js";import{b as T}from"./ByOfh-F8.js";import{_ as k}from"./DWLArl-7.js";import{u as w}from"./DXrM_eye.js";const M=Symbol(),R=p({__name:"Bitran",props:{transpiler:{},renderers:{},content:{},prefixId:{},editMode:{type:Boolean},formatText:{type:Function},RenderWrapper:{},isDev:{type:Boolean},isServer:{type:Boolean}},async setup(a){let e,t;const r=a;d(T,r);const s=([e,t]=c(()=>r.transpiler.parser.parse(r.content.biCode)),e=await e,t(),e);return d(M,{root:s}),(i,l)=>(o(),B("section",{class:f({"bitran-component":!0,"bitran-editMode":i.editMode})},[n(s)?(o(),_(k,{key:0,node:n(s)},null,8,["node"])):C("",!0)],2))}}),h=p({__name:"RenderWrapper",props:{mode:{}},setup(a){return(e,t)=>{const r=b;return e.mode!=="client"?u(e.$slots,"default",{key:0}):(o(),_(r,{key:1},{default:x(()=>[u(e.$slots,"default")]),_:3}))}}}),D=Object.assign(h,{__name:"BitranRenderWrapper"}),W=p({__name:"BitranContent",props:{content:{},context:{}},async setup(a){let e,t;const r=([e,t]=c(()=>v()),e=await e,t(),e),s=([e,t]=c(()=>$()),e=await e,t(),e),i=w(),l=!1,y=!1;return(m,j)=>(o(),_(n(R),{class:f(m.$style.eruditBitranContainer),transpiler:n(r),renderers:n(s),content:m.content,editMode:!1,formatText:n(i),RenderWrapper:D,isDev:n(l),isServer:n(y)},null,8,["class","transpiler","renderers","content","formatText","isDev","isServer"]))}}),g="_eruditBitranContainer_u8z81_1",z={eruditBitranContainer:g},O={$style:z},q=Object.assign(S(W,[["__cssModules",O]]),{__name:"BitranContent"});export{q as _};
